module Rubanok
  class Rule
    UNDEFINED: Object

    @method_name: String

    attr_reader fields: Array[field]
    attr_reader activate_on: Array[field]
    attr_reader activate_always: bool
    attr_reader ignore_empty_values: bool
    attr_reader filter_with: Method?

    def initialize: (Array[field] fields, ?activate_on: field | Array[field] activate_on, ?activate_always: bool activate_always, ?ignore_empty_values: bool ignore_empty_values, ?filter_with: Method? filter_with) -> void
    def project: (params) -> params
    def applicable?: (params) -> bool
    def to_method_name: () -> String

    private
    def build_method_name: () -> String
    def fetch_value: (params, field) -> Object
    def empty?: (untyped) -> bool
  end
end
